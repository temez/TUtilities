plugins {
    id 'java'
}

group = 'me.temez'
version = '0.1.3'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jiptack'
        url 'https://jitpack.io'
    }
    maven {  url "https://repo.codemc.io/repository/maven-public/" }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

}

configurations {
    packToJar
}

dependencies {
    compileOnly 'io.github.waterfallmc:waterfall-api:1.16-R0.5-SNAPSHOT'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.projectlombok:lombok:1.18.24'
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'com.samjakob:SpiGUI:1.2.3'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.gmail.filoghost.holographicdisplays:holographicdisplays-api:2.4.9'
    compileOnly fileTree(dir: "serverJars", includes: ['*.jar'])
    compileOnly 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'org.reflections:reflections:0.9.5-RC2'
    packToJar 'org.reflections:reflections:0.9.5-RC2'
    packToJar 'org.apache.commons:commons-lang3:3.12.0'
    packToJar 'com.samjakob:SpiGUI:1.2.3'

}

tasks.with {
    withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << '-Xlint:none'
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.packToJar.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
